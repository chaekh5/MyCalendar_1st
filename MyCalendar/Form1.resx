<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAlQCVAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACRAKMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKw/GfjjQfh54evNc8SarbaPpVpG0s
        1zcvtAUDJwOpPsMmgau9EblJ0r5Bv/2svid8YbVn+DPw6/s7QGYqPGvjx/sNiV6B4osh5B3/AKVwepfB
        nxj48kM3xL/aN8SakWOX0rwLb/YLVfYSHbuHvtrysZmmCy+HPi6sYLzaX3dX8j06OW4iv8EW/RN/fbb5
        n3z5if3l/Olr8/P+GUfhLHD5a6n8RppDx58niUq+f72AmM0vwV+IXiv9n79qjwz8KX8U6r438CeMLV5b
        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
</value>
  </data>
</root>